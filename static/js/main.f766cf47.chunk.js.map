{"version":3,"sources":["constants.js","service/apiService.js","components/login/SendOTPComponent.jsx","components/login/ValidateOTPComponent.jsx","components/login/LoginComponent.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["SUCCESS_MESSAGE","baseUrl","sendOTP","phoneNo","a","fetch","method","headers","body","JSON","stringify","phone","response","json","res","success","message","validateOTP","otp","match","sendOTPValidationSchema","yup","typeError","integer","required","min","max","SendOTPComponent","onSendOTPButtonClicked","formik","useFormik","onSubmit","validateOnBlur","validationSchema","initialValues","className","style","marginBottom","type","onChange","handleChange","name","value","values","onBlur","handleBlur","placeholder","errors","marginTop","disabled","dirty","_","isEmpty","isSubmitting","onClick","handleSubmit","validateOTPValidationSchema","shape","ValidateOTPComponent","validateOtpFormInitialValue","onValidateOTPButtonClicked","screens","LoginComponent","children","useState","isTokenValidated","setIsTokenValidated","screen","setScreen","setValidateOtpFormInitialValue","errorMsg","setErrorMsg","useCallback","setFieldError","console","error","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Sentry","dsn","autoSessionTracking","integrations","Integrations","BrowserTracing","tracesSampleRate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f766cf47.chunk.js","sourcesContent":["export const SUCCESS_MESSAGE = \"Success\";\n","import { SUCCESS_MESSAGE } from \"../constants\";\n\nconst baseUrl = \"http://localhost:8000\";\n\nexport async function sendOTP(phoneNo) {\n  const response = await fetch(`${baseUrl}/api/user/send_otp`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ phone: `+91${phoneNo}` }),\n  });\n  const res = await response.json();\n  const success = res.message === SUCCESS_MESSAGE;\n  return { ...res, success };\n}\n\nexport async function validateOTP(phoneNo, otp) {\n  const response = await fetch(`${baseUrl}/api/user/validate_otp`, {\n    method: \"POST\",\n    body: JSON.stringify({ phone: `+91${phoneNo}`, otp }),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  const res = await response.json();\n  return { ...res, success: res.match };\n}\n","import { useFormik } from \"formik\";\nimport _ from \"lodash\";\nimport * as yup from \"yup\";\n\nexport const sendOTPValidationSchema = yup.object({\n  phone: yup\n    .number()\n    .typeError(\"Invalid Phone No\")\n    .integer(\"Invalid Phone No\")\n    .required(\"Phone No is required\")\n    .min(1000000000, \"Invalid Phone No\")\n    .max(9999999999, \"Invalid Phone no\"),\n});\n\nexport function SendOTPComponent({ onSendOTPButtonClicked }) {\n  const formik = useFormik({\n    onSubmit: onSendOTPButtonClicked,\n    validateOnBlur: true,\n    validationSchema: sendOTPValidationSchema,\n    initialValues: { phone: \"\" },\n  });\n  return (\n    <>\n      <div className=\"field\" style={{ marginBottom: \"0\" }}>\n        <label className=\"label\">Phone No.</label>\n      </div>\n      <div className=\"field has-addons\">\n        <div className=\"control\">\n          <button className=\"button is-static\">+91</button>\n        </div>\n        <div className=\"control is-expanded\">\n          <input\n            type=\"text\"\n            onChange={formik.handleChange}\n            name=\"phone\"\n            value={formik.values.phone}\n            onBlur={formik.handleBlur}\n            placeholder=\"Phone No\"\n            className=\"input\"\n          />\n        </div>\n      </div>\n      {formik.errors.phone && (\n        <div className=\"field\" style={{ marginTop: \"-0.75rem\" }}>\n          <p className=\"help is-danger\">{formik.errors.phone}</p>\n        </div>\n      )}\n      <div className=\"field is-grouped is-grouped-right\">\n        <div className=\"control\">\n          <button\n            type=\"button\"\n            disabled={\n              !formik.dirty || !_.isEmpty(formik.errors) || formik.isSubmitting\n            }\n            className=\"button is-primary\"\n            onClick={formik.handleSubmit}\n          >\n            Send OTP\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n","import * as yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { sendOTPValidationSchema } from \"./SendOTPComponent\";\nimport _ from \"lodash\";\n\nconst validateOTPValidationSchema = sendOTPValidationSchema.shape({\n  otp: yup\n    .number()\n    .typeError(\"OTP should be a number\")\n    .integer(\"Invalid OTP\")\n    .required(\"OTP is required\"),\n});\n\nexport function ValidateOTPComponent({\n  validateOtpFormInitialValue,\n  onValidateOTPButtonClicked,\n}) {\n  const formik = useFormik({\n    onSubmit: onValidateOTPButtonClicked,\n    validateOnBlur: true,\n    validationSchema: validateOTPValidationSchema,\n    initialValues: validateOtpFormInitialValue,\n  });\n  return (\n    <>\n      <div className=\"field\" style={{ marginBottom: \"0\" }}>\n        <label className=\"label\">Phone No.</label>\n      </div>\n      <div className=\"field has-addons\">\n        <div className=\"control\">\n          <button className=\"button is-static\">+91</button>\n        </div>\n        <div className=\"control is-expanded\">\n          <input\n            type=\"text\"\n            onChange={formik.handleChange}\n            name=\"phone\"\n            value={formik.values.phone}\n            onBlur={formik.handleBlur}\n            placeholder=\"Phone No\"\n            className=\"input\"\n            disabled\n          />\n        </div>\n      </div>\n      {formik.errors.phone && (\n        <div className=\"field\" style={{ marginTop: \"-0.75rem\" }}>\n          <p className=\"help is-danger\">{formik.errors.phone}</p>\n        </div>\n      )}\n      <div className=\"field\">\n        <label className=\"label\">OTP</label>\n        <div className=\"control is-expanded\">\n          <input\n            type=\"text\"\n            name=\"otp\"\n            value={formik.values.otp}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            placeholder=\"OTP\"\n            className=\"input\"\n          />\n        </div>\n        {formik.errors.otp && (\n          <p className=\"help is-danger\">{formik.errors.otp}</p>\n        )}\n      </div>\n      <div className=\"field is-grouped is-grouped-right\">\n        <div className=\"control\">\n          <button\n            type=\"button\"\n            disabled={\n              !formik.dirty || !_.isEmpty(formik.errors) || formik.isSubmitting\n            }\n            className=\"button is-primary\"\n            onClick={formik.handleSubmit}\n          >\n            Validate OTP\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n","import { useCallback, useState } from \"react\";\nimport { sendOTP, validateOTP } from \"../../service/apiService\";\nimport { ValidateOTPComponent } from \"./ValidateOTPComponent\";\nimport { SendOTPComponent } from \"./SendOTPComponent\";\n\nconst screens = {\n  SEND_OTP: \"SEND_OTP\",\n  VALIDATE_OTP: \"VALIDATE_OTP\",\n};\n\nexport function LoginComponent({ children }) {\n  const [isTokenValidated, setIsTokenValidated] = useState(false);\n  const [screen, setScreen] = useState(screens.SEND_OTP);\n  const [\n    validateOtpFormInitialValue,\n    setValidateOtpFormInitialValue,\n  ] = useState({ phone: \"\", otp: \"\" });\n  const [errorMsg, setErrorMsg] = useState(null);\n  const onSendOTPButtonClicked = useCallback(\n    async (values, formik) => {\n      try {\n        const response = await sendOTP(values.phone);\n        if (response.success) {\n          setValidateOtpFormInitialValue({ phone: values.phone, otp: \"\" });\n          setScreen(screens.VALIDATE_OTP);\n        } else {\n          formik.setFieldError(\"phone\", response.message);\n        }\n      } catch (e) {\n        console.error(e);\n        setErrorMsg(\"Sending OTP failed\");\n      }\n    },\n    [setValidateOtpFormInitialValue, setErrorMsg, setScreen]\n  );\n\n  const onValidateOTPButtonClicked = useCallback(async (values, formik) => {\n    try {\n      const response = await validateOTP(values.phone, values.otp);\n      if (response.success) {\n        setIsTokenValidated(true);\n      } else {\n        formik.setFieldError(\"otp\", response.message);\n      }\n    } catch (e) {\n      console.error(e);\n      setErrorMsg(\"Validating OTP failed\");\n    }\n  }, []);\n\n  if (!isTokenValidated)\n    return (\n      <div className=\"container is-max-desktop\">\n        <div className=\"tile is-ancestor\">\n          <div className=\"tile is-3\" />\n          <div className=\"tile is-6\">\n            <div className=\"container\">\n              <div className=\"box\">\n                {screen === screens.SEND_OTP ? (\n                  <SendOTPComponent\n                    onSendOTPButtonClicked={onSendOTPButtonClicked}\n                  />\n                ) : (\n                  <ValidateOTPComponent\n                    validateOtpFormInitialValue={validateOtpFormInitialValue}\n                    onValidateOTPButtonClicked={onValidateOTPButtonClicked}\n                  />\n                )}\n                {errorMsg && (\n                  <div className=\"notification is-danger\">{errorMsg}</div>\n                )}\n              </div>\n            </div>\n          </div>\n          <div className=\"title is-3\" />\n        </div>\n      </div>\n    );\n  else return <>{children}</>;\n}\n","import \"./sass/mystyles.scss\";\nimport { LoginComponent } from \"./components/login/LoginComponent\";\n\nfunction App() {\n  return <LoginComponent>got into the app</LoginComponent>;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as Sentry from \"@sentry/react\";\nimport { Integrations } from \"@sentry/tracing\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nSentry.init({\n  dsn:\n    \"https://90f08963d9ff4919b0fdd357df42285c@o492546.ingest.sentry.io/5560045\",\n  autoSessionTracking: true,\n  integrations: [new Integrations.BrowserTracing()],\n\n  // We recommend adjusting this value in production, or using tracesSampler\n  // for finer control\n  tracesSampleRate: 1.0,\n});\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}